[2017-10-22 23:13:51,703] da.api<MainProcess>:INFO: <Node_:a5001> initialized at 127.0.0.1:(UdpTransport=19888, TcpTransport=16359).
[2017-10-22 23:13:51,703] da.api<MainProcess>:INFO: Starting program <module 'bcr' from '/Users/nikithakandru/Desktop/Async/BCR/bcr/bcr.py'>...
[2017-10-22 23:13:51,704] da.api<MainProcess>:INFO: Running iteration 1 ...
[2017-10-22 23:13:51,704] da.api<MainProcess>:INFO: Waiting for remaining child processes to terminate...(Press "Ctrl-C" to force kill)
[2017-10-22 23:13:51,706] bcr.Node_<Node_:a5001>:OUTPUT: configuration parameters are read from file
[2017-10-22 23:13:51,707] bcr.Node_<Node_:a5001>:OUTPUT: replica private keys
[2017-10-22 23:13:51,707] bcr.Node_<Node_:a5001>:OUTPUT:  [<nacl.signing.SigningKey object at 0x1034cdfd0>, <nacl.signing.SigningKey object at 0x1034e8080>, <nacl.signing.SigningKey object at 0x1034e80f0>]
[2017-10-22 23:13:51,707] bcr.Node_<Node_:a5001>:OUTPUT: replica public keys
[2017-10-22 23:13:51,707] bcr.Node_<Node_:a5001>:OUTPUT:  [<nacl.signing.VerifyKey object at 0x1034e8048>, <nacl.signing.VerifyKey object at 0x1034e80b8>, <nacl.signing.VerifyKey object at 0x1034e8128>]
[2017-10-22 23:13:51,771] olympus.Olympus<Olympus:ec804>:INFO: Starting Olympus
[2017-10-22 23:13:51,778] client.Client<Client:ec803>:INFO: Client 0 asking for configuration from  Olympus
[2017-10-22 23:13:51,778] client.Client<Client:ec802>:INFO: Client 1 asking for configuration from  Olympus
[2017-10-22 23:13:51,823] replica.Replica<Replica:ec807>:INFO: Starting Replica
[2017-10-22 23:13:51,824] replica.Replica<Replica:ec805>:INFO: Starting Replica
[2017-10-22 23:13:51,824] replica.Replica<Replica:ec806>:INFO: Starting Replica
[2017-10-22 23:13:51,825] olympus.Olympus<Olympus:ec804>:INFO: Message inithist sent to replica 0
[2017-10-22 23:13:51,826] replica.Replica<Replica:ec807>:INFO: replica 0 received inithist from olympus
[2017-10-22 23:13:51,826] replica.Replica<Replica:ec807>:INFO: Replica 0 is head
[2017-10-22 23:13:51,826] olympus.Olympus<Olympus:ec804>:INFO: Message inithist sent to replica 1
[2017-10-22 23:13:51,827] replica.Replica<Replica:ec806>:INFO: replica 1 received inithist from olympus
[2017-10-22 23:13:51,828] olympus.Olympus<Olympus:ec804>:INFO: Message inithist sent to replica 2
[2017-10-22 23:13:51,829] replica.Replica<Replica:ec805>:INFO: replica 2 received inithist from olympus
[2017-10-22 23:13:51,829] olympus.Olympus<Olympus:ec804>:INFO: Olympus received configuration_request from client 0
[2017-10-22 23:13:51,829] replica.Replica<Replica:ec805>:INFO: Replica 2 is tail
[2017-10-22 23:13:51,830] olympus.Olympus<Olympus:ec804>:INFO: Olympus received configuration_request from client 1
[2017-10-22 23:13:51,830] olympus.Olympus<Olympus:ec804>:INFO: Olympus sending configuration response to client 1
[2017-10-22 23:13:51,832] olympus.Olympus<Olympus:ec804>:INFO: Olympus sending configuration response to client 0
[2017-10-22 23:13:51,833] client.Client<Client:ec802>:INFO: Client 1 received configuration_response from olympus
[2017-10-22 23:13:51,835] client.Client<Client:ec803>:INFO: Client 0 received configuration_response from olympus
[2017-10-22 23:13:51,836] client.Client<Client:ec802>:INFO: Client 1 sent (operationName,operationId,key,value):(get,1,movie,None) to head
[2017-10-22 23:13:51,837] replica.Replica<Replica:ec807>:INFO: Replica:0 received client_operation_request:0 from client:1 
[2017-10-22 23:13:51,838] replica.Replica<Replica:ec807>:OUTPUT: Replica:0 {client:{message_type>messagecount} is :{1: {<MessageTypes.DIRECT: 0>: 0}}
[2017-10-22 23:13:51,838] replica.Replica<Replica:ec807>:OUTPUT: Failure trigger is None , failure checks:  change_oper=False change_result=False drop_result=False change_privatekey=False for the client_operation_request 0 in Replica:0
[2017-10-22 23:13:51,839] replica.Replica<Replica:ec807>:INFO: [Replica:0 runningState:{} OperationName:get OperationId:1 ]
[2017-10-22 23:13:51,839] replica.Replica<Replica:ec807>:OUTPUT: result of operation is  for Replica:0
[2017-10-22 23:13:51,839] replica.Replica<Replica:ec807>:OUTPUT: Replica:0 order statement [slot,operationName,operationId,replicaId]:[0,get,1,0] is signed,appended to order Proof
[2017-10-22 23:13:51,840] replica.Replica<Replica:ec807>:OUTPUT: Replica:0 result statement [result_hash,operationName,operationId,replicaId]:[b'9238a956da94f16cf609c1b8b8ca16940cf1c77a9fb8ecf7f67ef75f6b2e0f68',get,1,0] is signed,appended to result Proof
[2017-10-22 23:13:51,840] client.Client<Client:ec803>:INFO: Client 0 sent (operationName,operationId,key,value):(put,1,movie,star) to head
[2017-10-22 23:13:51,842] replica.Replica<Replica:ec807>:OUTPUT: Forward Shuttle sent from head for Client:1
[2017-10-22 23:13:51,842] replica.Replica<Replica:ec807>:INFO: Replica:0 received client_operation_request:0 from client:0 
[2017-10-22 23:13:51,842] replica.Replica<Replica:ec807>:OUTPUT: Replica:0 {client:{message_type>messagecount} is :{1: {<MessageTypes.DIRECT: 0>: 0}, 0: {<MessageTypes.DIRECT: 0>: 0}}
[2017-10-22 23:13:51,843] replica.Replica<Replica:ec807>:OUTPUT: Failure trigger is None , failure checks:  change_oper=False change_result=False drop_result=False change_privatekey=False for the client_operation_request 0 in Replica:0
[2017-10-22 23:13:51,843] replica.Replica<Replica:ec806>:INFO: Replica:1 received forward shuttle:0 for client:1
[2017-10-22 23:13:51,843] replica.Replica<Replica:ec807>:INFO: [Replica:0 runningState:{'movie': 'star'} OperationName:put OperationId:1 ]
[2017-10-22 23:13:51,843] replica.Replica<Replica:ec806>:OUTPUT: Replica:1 {client:{message_type>messagecount} is :{1: {<MessageTypes.SHUTTLE: 2>: 0}}
[2017-10-22 23:13:51,843] replica.Replica<Replica:ec807>:OUTPUT: result of operation is OK for Replica:0
[2017-10-22 23:13:51,843] replica.Replica<Replica:ec807>:OUTPUT: Replica:0 order statement [slot,operationName,operationId,replicaId]:[1,put,1,0] is signed,appended to order Proof
[2017-10-22 23:13:51,843] replica.Replica<Replica:ec806>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=False change_privatekey=False for the forward shuttle:0 client:1 in Replica:1
[2017-10-22 23:13:51,843] replica.Replica<Replica:ec807>:OUTPUT: Replica:0 result statement [result_hash,operationName,operationId,replicaId]:[b'993c86df9aeaf07579b44943216571b94456b0228e65b6e09384701a7c4ab03f',put,1,0] is signed,appended to result Proof
[2017-10-22 23:13:51,844] replica.Replica<Replica:ec806>:OUTPUT: Forward Shuttle:0 for Client:1 passed validation at Replica:1
[2017-10-22 23:13:51,844] replica.Replica<Replica:ec807>:OUTPUT: Forward Shuttle sent from head for Client:0
[2017-10-22 23:13:51,844] replica.Replica<Replica:ec806>:INFO: [Replica:1 runningState:{} OperationName:get OperationId:1 ]
[2017-10-22 23:13:51,844] replica.Replica<Replica:ec806>:OUTPUT: result of operation is  for Replica:1
[2017-10-22 23:13:51,845] replica.Replica<Replica:ec806>:OUTPUT: Replica:1 order statement [slot,operationName,operationId,replicaId]:[0,get,1,1] is signed,appended to order Proof
[2017-10-22 23:13:51,845] replica.Replica<Replica:ec806>:OUTPUT: Replica:1 result statement [result_hash,operationName,operationId,replicaId]:[b'9238a956da94f16cf609c1b8b8ca16940cf1c77a9fb8ecf7f67ef75f6b2e0f68',get,1,1] is signed,appended to result Proof
[2017-10-22 23:13:51,848] replica.Replica<Replica:ec806>:OUTPUT: forward shuttle sent to next replica
[2017-10-22 23:13:51,849] replica.Replica<Replica:ec806>:INFO: Replica:1 received forward shuttle:0 for client:0
[2017-10-22 23:13:51,849] replica.Replica<Replica:ec805>:INFO: Replica:2 received forward shuttle:0 for client:1
[2017-10-22 23:13:51,849] replica.Replica<Replica:ec806>:OUTPUT: Replica:1 {client:{message_type>messagecount} is :{1: {<MessageTypes.SHUTTLE: 2>: 0}, 0: {<MessageTypes.SHUTTLE: 2>: 0}}
[2017-10-22 23:13:51,849] replica.Replica<Replica:ec805>:OUTPUT: Replica:2 {client:{message_type>messagecount} is :{1: {<MessageTypes.SHUTTLE: 2>: 0}}
[2017-10-22 23:13:51,849] replica.Replica<Replica:ec806>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=False change_privatekey=False for the forward shuttle:0 client:0 in Replica:1
[2017-10-22 23:13:51,849] replica.Replica<Replica:ec805>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=False change_privatekey=False for the forward shuttle:0 client:1 in Replica:2
[2017-10-22 23:13:51,850] replica.Replica<Replica:ec806>:OUTPUT: Forward Shuttle:0 for Client:0 passed validation at Replica:1
[2017-10-22 23:13:51,850] replica.Replica<Replica:ec806>:INFO: [Replica:1 runningState:{'movie': 'star'} OperationName:put OperationId:1 ]
[2017-10-22 23:13:51,850] replica.Replica<Replica:ec806>:OUTPUT: result of operation is OK for Replica:1
[2017-10-22 23:13:51,850] replica.Replica<Replica:ec806>:OUTPUT: Replica:1 order statement [slot,operationName,operationId,replicaId]:[1,put,1,1] is signed,appended to order Proof
[2017-10-22 23:13:51,850] replica.Replica<Replica:ec805>:OUTPUT: Forward Shuttle:0 for Client:1 passed validation at Replica:2
[2017-10-22 23:13:51,851] replica.Replica<Replica:ec806>:OUTPUT: Replica:1 result statement [result_hash,operationName,operationId,replicaId]:[b'993c86df9aeaf07579b44943216571b94456b0228e65b6e09384701a7c4ab03f',put,1,1] is signed,appended to result Proof
[2017-10-22 23:13:51,851] replica.Replica<Replica:ec805>:INFO: [Replica:2 runningState:{} OperationName:get OperationId:1 ]
[2017-10-22 23:13:51,851] replica.Replica<Replica:ec805>:OUTPUT: result of operation is  for Replica:2
[2017-10-22 23:13:51,851] replica.Replica<Replica:ec805>:OUTPUT: Replica:2 order statement [slot,operationName,operationId,replicaId]:[0,get,1,2] is signed,appended to order Proof
[2017-10-22 23:13:51,851] replica.Replica<Replica:ec806>:OUTPUT: forward shuttle sent to next replica
[2017-10-22 23:13:51,852] replica.Replica<Replica:ec805>:OUTPUT: Replica:2 result statement [result_hash,operationName,operationId,replicaId]:[b'9238a956da94f16cf609c1b8b8ca16940cf1c77a9fb8ecf7f67ef75f6b2e0f68',get,1,2] is signed,appended to result Proof
[2017-10-22 23:13:51,854] replica.Replica<Replica:ec805>:OUTPUT: client result shuttle sent from tail to client:1
[2017-10-22 23:13:51,854] client.Client<Client:ec802>:INFO: Client:1 received result: from <Replica:ec805>
[2017-10-22 23:13:51,854] client.Client<Client:ec802>:INFO: Client:1 is operation valid: True
[2017-10-22 23:13:51,855] replica.Replica<Replica:ec805>:OUTPUT: backward shuttle generated from tail
[2017-10-22 23:13:51,856] client.Client<Client:ec802>:INFO: Client:1 Result Proof is valid
[2017-10-22 23:13:51,856] replica.Replica<Replica:ec806>:INFO: Replica:1 received backward shuttle:0 for client:1
[2017-10-22 23:13:51,856] replica.Replica<Replica:ec805>:INFO: Replica:2 received forward shuttle:0 for client:0
[2017-10-22 23:13:51,856] client.Client<Client:ec802>:INFO: Client:1 received VALID result
[2017-10-22 23:13:51,856] replica.Replica<Replica:ec806>:OUTPUT: Replica:1 {client:{message_type>messagecount}:{1: {<MessageTypes.SHUTTLE: 2>: 0, <MessageTypes.RESULT_SHUTTLE: 3>: 0}, 0: {<MessageTypes.SHUTTLE: 2>: 0}}
[2017-10-22 23:13:51,856] replica.Replica<Replica:ec805>:OUTPUT: Replica:2 {client:{message_type>messagecount} is :{1: {<MessageTypes.SHUTTLE: 2>: 0}, 0: {<MessageTypes.SHUTTLE: 2>: 0}}
[2017-10-22 23:13:51,856] replica.Replica<Replica:ec806>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=False change_privatekey=False for the backward shuttle:0 client:1 in Replica:1
[2017-10-22 23:13:51,856] replica.Replica<Replica:ec805>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=False change_privatekey=False for the forward shuttle:0 client:0 in Replica:2
[2017-10-22 23:13:51,857] client.Client<Client:ec802>:INFO: Client 1 sent (operationName,operationId,key,value):(put,2,movie,stars) to head
[2017-10-22 23:13:51,857] replica.Replica<Replica:ec805>:OUTPUT: Forward Shuttle:0 for Client:0 passed validation at Replica:2
[2017-10-22 23:13:51,857] replica.Replica<Replica:ec806>:OUTPUT: Result Proof is valid for Replica:1
[2017-10-22 23:13:51,857] replica.Replica<Replica:ec805>:INFO: [Replica:2 runningState:{'movie': 'star'} OperationName:put OperationId:1 ]
[2017-10-22 23:13:51,858] replica.Replica<Replica:ec806>:OUTPUT: Backward Shuttle:0 for client:1 passed validation at Replica:1
[2017-10-22 23:13:51,858] replica.Replica<Replica:ec805>:OUTPUT: result of operation is OK for Replica:2
[2017-10-22 23:13:51,858] replica.Replica<Replica:ec806>:INFO: [Replica:1 runningState:{'movie': 'star'} OperationName:get OperationId:1]
[2017-10-22 23:13:51,858] replica.Replica<Replica:ec807>:INFO: Replica:0 received client_operation_request:1 from client:1 
[2017-10-22 23:13:51,858] replica.Replica<Replica:ec807>:OUTPUT: Replica:0 {client:{message_type>messagecount} is :{1: {<MessageTypes.DIRECT: 0>: 1}, 0: {<MessageTypes.DIRECT: 0>: 0}}
[2017-10-22 23:13:51,858] replica.Replica<Replica:ec805>:OUTPUT: Replica:2 order statement [slot,operationName,operationId,replicaId]:[1,put,1,2] is signed,appended to order Proof
[2017-10-22 23:13:51,858] replica.Replica<Replica:ec807>:OUTPUT: Failure trigger is None , failure checks:  change_oper=False change_result=False drop_result=False change_privatekey=False for the client_operation_request 1 in Replica:0
[2017-10-22 23:13:51,858] replica.Replica<Replica:ec805>:OUTPUT: Replica:2 result statement [result_hash,operationName,operationId,replicaId]:[b'993c86df9aeaf07579b44943216571b94456b0228e65b6e09384701a7c4ab03f',put,1,2] is signed,appended to result Proof
[2017-10-22 23:13:51,859] replica.Replica<Replica:ec807>:INFO: [Replica:0 runningState:{'movie': 'stars'} OperationName:put OperationId:2 ]
[2017-10-22 23:13:51,859] replica.Replica<Replica:ec807>:OUTPUT: result of operation is OK for Replica:0
[2017-10-22 23:13:51,859] replica.Replica<Replica:ec807>:OUTPUT: Replica:0 order statement [slot,operationName,operationId,replicaId]:[2,put,2,0] is signed,appended to order Proof
[2017-10-22 23:13:51,859] replica.Replica<Replica:ec807>:OUTPUT: Replica:0 result statement [result_hash,operationName,operationId,replicaId]:[b'993c86df9aeaf07579b44943216571b94456b0228e65b6e09384701a7c4ab03f',put,2,0] is signed,appended to result Proof
[2017-10-22 23:13:51,861] replica.Replica<Replica:ec805>:OUTPUT: client result shuttle sent from tail to client:0
[2017-10-22 23:13:51,861] replica.Replica<Replica:ec807>:OUTPUT: Forward Shuttle sent from head for Client:1
[2017-10-22 23:13:51,862] client.Client<Client:ec803>:INFO: Client:0 received result:OK from <Replica:ec805>
[2017-10-22 23:13:51,862] replica.Replica<Replica:ec805>:OUTPUT: backward shuttle generated from tail
[2017-10-22 23:13:51,862] client.Client<Client:ec803>:INFO: Client:0 is operation valid: True
[2017-10-22 23:13:51,863] replica.Replica<Replica:ec806>:OUTPUT: backward shuttle sent to previous replica
[2017-10-22 23:13:51,864] replica.Replica<Replica:ec807>:INFO: Replica:0 received backward shuttle:0 for client:1
[2017-10-22 23:13:51,864] replica.Replica<Replica:ec806>:INFO: Replica:1 received forward shuttle:1 for client:1
[2017-10-22 23:13:51,864] replica.Replica<Replica:ec807>:OUTPUT: Replica:0 {client:{message_type>messagecount}:{1: {<MessageTypes.DIRECT: 0>: 1, <MessageTypes.RESULT_SHUTTLE: 3>: 0}, 0: {<MessageTypes.DIRECT: 0>: 0}}
[2017-10-22 23:13:51,864] replica.Replica<Replica:ec807>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=False change_privatekey=False for the backward shuttle:0 client:1 in Replica:0
[2017-10-22 23:13:51,865] client.Client<Client:ec803>:INFO: Client:0 Result Proof is valid
[2017-10-22 23:13:51,866] client.Client<Client:ec803>:INFO: Client:0 received VALID result
[2017-10-22 23:13:51,864] replica.Replica<Replica:ec806>:OUTPUT: Replica:1 {client:{message_type>messagecount} is :{1: {<MessageTypes.SHUTTLE: 2>: 1, <MessageTypes.RESULT_SHUTTLE: 3>: 0}, 0: {<MessageTypes.SHUTTLE: 2>: 0}}
[2017-10-22 23:13:51,866] replica.Replica<Replica:ec806>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=False change_privatekey=False for the forward shuttle:1 client:1 in Replica:1
[2017-10-22 23:13:51,867] client.Client<Client:ec803>:INFO: Client 0 sent (operationName,operationId,key,value):(slice,2,movie,1:4) to head
[2017-10-22 23:13:51,867] replica.Replica<Replica:ec806>:OUTPUT: Forward Shuttle:1 for Client:1 passed validation at Replica:1
[2017-10-22 23:13:51,865] replica.Replica<Replica:ec807>:OUTPUT: Result Proof is valid for Replica:0
[2017-10-22 23:13:51,867] replica.Replica<Replica:ec806>:INFO: [Replica:1 runningState:{'movie': 'stars'} OperationName:put OperationId:2 ]
[2017-10-22 23:13:51,867] replica.Replica<Replica:ec807>:OUTPUT: Backward Shuttle:0 for client:1 passed validation at Replica:0
[2017-10-22 23:13:51,867] replica.Replica<Replica:ec806>:OUTPUT: result of operation is OK for Replica:1
[2017-10-22 23:13:51,868] replica.Replica<Replica:ec807>:INFO: [Replica:0 runningState:{'movie': 'stars'} OperationName:get OperationId:1]
[2017-10-22 23:13:51,868] replica.Replica<Replica:ec806>:OUTPUT: Replica:1 order statement [slot,operationName,operationId,replicaId]:[2,put,2,1] is signed,appended to order Proof
[2017-10-22 23:13:51,868] replica.Replica<Replica:ec807>:OUTPUT: backward shuttle reached head
[2017-10-22 23:13:51,868] replica.Replica<Replica:ec806>:OUTPUT: Replica:1 result statement [result_hash,operationName,operationId,replicaId]:[b'993c86df9aeaf07579b44943216571b94456b0228e65b6e09384701a7c4ab03f',put,2,1] is signed,appended to result Proof
[2017-10-22 23:13:51,869] replica.Replica<Replica:ec807>:INFO: Replica:0 received client_operation_request:1 from client:0 
[2017-10-22 23:13:51,869] replica.Replica<Replica:ec806>:OUTPUT: forward shuttle sent to next replica
[2017-10-22 23:13:51,869] replica.Replica<Replica:ec807>:OUTPUT: Replica:0 {client:{message_type>messagecount} is :{1: {<MessageTypes.DIRECT: 0>: 1, <MessageTypes.RESULT_SHUTTLE: 3>: 0}, 0: {<MessageTypes.DIRECT: 0>: 1}}
[2017-10-22 23:13:51,869] replica.Replica<Replica:ec807>:OUTPUT: Failure trigger is client_request(0,1),drop_result_stmt() , failure checks:  change_oper=False change_result=False drop_result=True change_privatekey=False for the client_operation_request 1 in Replica:0
[2017-10-22 23:13:51,870] replica.Replica<Replica:ec806>:INFO: Replica:1 received backward shuttle:0 for client:0
[2017-10-22 23:13:51,870] replica.Replica<Replica:ec806>:OUTPUT: Replica:1 {client:{message_type>messagecount}:{1: {<MessageTypes.SHUTTLE: 2>: 1, <MessageTypes.RESULT_SHUTTLE: 3>: 0}, 0: {<MessageTypes.SHUTTLE: 2>: 0, <MessageTypes.RESULT_SHUTTLE: 3>: 0}}
[2017-10-22 23:13:51,871] replica.Replica<Replica:ec805>:INFO: Replica:2 received forward shuttle:1 for client:1
[2017-10-22 23:13:51,870] replica.Replica<Replica:ec807>:INFO: [Replica:0 runningState:{'movie': 'tar'} OperationName:slice OperationId:2 ]
[2017-10-22 23:13:51,871] replica.Replica<Replica:ec806>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=False change_privatekey=False for the backward shuttle:0 client:0 in Replica:1
[2017-10-22 23:13:51,871] replica.Replica<Replica:ec805>:OUTPUT: Replica:2 {client:{message_type>messagecount} is :{1: {<MessageTypes.SHUTTLE: 2>: 1}, 0: {<MessageTypes.SHUTTLE: 2>: 0}}
[2017-10-22 23:13:51,871] replica.Replica<Replica:ec807>:OUTPUT: result of operation is OK for Replica:0
[2017-10-22 23:13:51,872] replica.Replica<Replica:ec805>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=False change_privatekey=False for the forward shuttle:1 client:1 in Replica:2
[2017-10-22 23:13:51,872] replica.Replica<Replica:ec807>:OUTPUT: Replica:0 order statement [slot,operationName,operationId,replicaId]:[3,slice,2,0] is signed,appended to order Proof
[2017-10-22 23:13:51,873] replica.Replica<Replica:ec805>:OUTPUT: Forward Shuttle:1 for Client:1 passed validation at Replica:2
[2017-10-22 23:13:51,875] replica.Replica<Replica:ec806>:OUTPUT: Result Proof is valid for Replica:1
[2017-10-22 23:13:51,875] replica.Replica<Replica:ec805>:INFO: [Replica:2 runningState:{'movie': 'stars'} OperationName:put OperationId:2 ]
[2017-10-22 23:13:51,875] replica.Replica<Replica:ec806>:OUTPUT: Backward Shuttle:0 for client:0 passed validation at Replica:1
[2017-10-22 23:13:51,875] replica.Replica<Replica:ec805>:OUTPUT: result of operation is OK for Replica:2
[2017-10-22 23:13:51,875] replica.Replica<Replica:ec806>:INFO: [Replica:1 runningState:{'movie': 'stars'} OperationName:put OperationId:1]
[2017-10-22 23:13:51,875] replica.Replica<Replica:ec805>:OUTPUT: Replica:2 order statement [slot,operationName,operationId,replicaId]:[2,put,2,2] is signed,appended to order Proof
[2017-10-22 23:13:51,876] replica.Replica<Replica:ec805>:OUTPUT: Replica:2 result statement [result_hash,operationName,operationId,replicaId]:[b'993c86df9aeaf07579b44943216571b94456b0228e65b6e09384701a7c4ab03f',put,2,2] is signed,appended to result Proof
[2017-10-22 23:13:51,876] replica.Replica<Replica:ec806>:OUTPUT: backward shuttle sent to previous replica
[2017-10-22 23:13:51,873] replica.Replica<Replica:ec807>:OUTPUT: Replica:0 result statement [result_hash,operationName,operationId,replicaId]:[b'993c86df9aeaf07579b44943216571b94456b0228e65b6e09384701a7c4ab03f',slice,2,0] is signed,appended to result Proof
[2017-10-22 23:13:51,876] replica.Replica<Replica:ec805>:OUTPUT: client result shuttle sent from tail to client:1
[2017-10-22 23:13:51,878] client.Client<Client:ec802>:INFO: Client:1 received result:OK from <Replica:ec805>
[2017-10-22 23:13:51,878] client.Client<Client:ec802>:INFO: Client:1 is operation valid: True
[2017-10-22 23:13:51,878] replica.Replica<Replica:ec806>:INFO: Replica:1 received forward shuttle:1 for client:0
[2017-10-22 23:13:51,877] replica.Replica<Replica:ec807>:OUTPUT: Forward Shuttle sent from head for Client:0
[2017-10-22 23:13:51,878] replica.Replica<Replica:ec806>:OUTPUT: Replica:1 {client:{message_type>messagecount} is :{1: {<MessageTypes.SHUTTLE: 2>: 1, <MessageTypes.RESULT_SHUTTLE: 3>: 0}, 0: {<MessageTypes.SHUTTLE: 2>: 1, <MessageTypes.RESULT_SHUTTLE: 3>: 0}}
[2017-10-22 23:13:51,879] replica.Replica<Replica:ec806>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=False change_privatekey=False for the forward shuttle:1 client:0 in Replica:1
[2017-10-22 23:13:51,879] replica.Replica<Replica:ec807>:INFO: Replica:0 received backward shuttle:0 for client:0
[2017-10-22 23:13:51,879] client.Client<Client:ec802>:INFO: Client:1 Result Proof is valid
[2017-10-22 23:13:51,879] replica.Replica<Replica:ec806>:OUTPUT: Forward Shuttle:1 for Client:0 passed validation at Replica:1
[2017-10-22 23:13:51,879] replica.Replica<Replica:ec807>:OUTPUT: Replica:0 {client:{message_type>messagecount}:{1: {<MessageTypes.DIRECT: 0>: 1, <MessageTypes.RESULT_SHUTTLE: 3>: 0}, 0: {<MessageTypes.DIRECT: 0>: 1, <MessageTypes.RESULT_SHUTTLE: 3>: 0}}
[2017-10-22 23:13:51,877] replica.Replica<Replica:ec805>:OUTPUT: backward shuttle generated from tail
[2017-10-22 23:13:51,879] client.Client<Client:ec802>:INFO: Client:1 received VALID result
[2017-10-22 23:13:51,880] replica.Replica<Replica:ec807>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=True change_privatekey=False for the backward shuttle:0 client:0 in Replica:0
[2017-10-22 23:13:51,880] client.Client<Client:ec802>:INFO: client 1 workload output:{'movie': 'stars'}
[2017-10-22 23:13:51,880] replica.Replica<Replica:ec806>:INFO: [Replica:1 runningState:{'movie': 'tar'} OperationName:slice OperationId:2 ]
[2017-10-22 23:13:51,880] replica.Replica<Replica:ec806>:OUTPUT: result of operation is OK for Replica:1
[2017-10-22 23:13:51,881] replica.Replica<Replica:ec806>:OUTPUT: Replica:1 order statement [slot,operationName,operationId,replicaId]:[3,slice,2,1] is signed,appended to order Proof
[2017-10-22 23:13:51,881] replica.Replica<Replica:ec807>:OUTPUT: Result Proof is valid for Replica:0
[2017-10-22 23:13:51,881] replica.Replica<Replica:ec807>:OUTPUT: Backward Shuttle:0 for client:0 passed validation at Replica:0
[2017-10-22 23:13:51,881] replica.Replica<Replica:ec807>:INFO: [Replica:0 runningState:{'movie': 'tar'} OperationName:put OperationId:1]
[2017-10-22 23:13:51,881] replica.Replica<Replica:ec807>:OUTPUT: backward shuttle reached head
[2017-10-22 23:13:51,881] replica.Replica<Replica:ec806>:OUTPUT: Replica:1 result statement [result_hash,operationName,operationId,replicaId]:[b'993c86df9aeaf07579b44943216571b94456b0228e65b6e09384701a7c4ab03f',slice,2,1] is signed,appended to result Proof
[2017-10-22 23:13:51,882] replica.Replica<Replica:ec806>:OUTPUT: forward shuttle sent to next replica
[2017-10-22 23:13:51,883] replica.Replica<Replica:ec805>:INFO: Replica:2 received forward shuttle:1 for client:0
[2017-10-22 23:13:51,883] replica.Replica<Replica:ec806>:INFO: Replica:1 received backward shuttle:1 for client:1
[2017-10-22 23:13:51,883] replica.Replica<Replica:ec805>:OUTPUT: Replica:2 {client:{message_type>messagecount} is :{1: {<MessageTypes.SHUTTLE: 2>: 1}, 0: {<MessageTypes.SHUTTLE: 2>: 1}}
[2017-10-22 23:13:51,883] replica.Replica<Replica:ec805>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=False change_privatekey=False for the forward shuttle:1 client:0 in Replica:2
[2017-10-22 23:13:51,883] replica.Replica<Replica:ec806>:OUTPUT: Replica:1 {client:{message_type>messagecount}:{1: {<MessageTypes.SHUTTLE: 2>: 1, <MessageTypes.RESULT_SHUTTLE: 3>: 1}, 0: {<MessageTypes.SHUTTLE: 2>: 1, <MessageTypes.RESULT_SHUTTLE: 3>: 0}}
[2017-10-22 23:13:51,883] replica.Replica<Replica:ec806>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=False change_privatekey=False for the backward shuttle:1 client:1 in Replica:1
[2017-10-22 23:13:51,884] replica.Replica<Replica:ec806>:OUTPUT: Result Proof is valid for Replica:1
[2017-10-22 23:13:51,885] replica.Replica<Replica:ec806>:OUTPUT: Backward Shuttle:1 for client:1 passed validation at Replica:1
[2017-10-22 23:13:51,884] replica.Replica<Replica:ec805>:OUTPUT: Forward Shuttle:1 for Client:0 passed validation at Replica:2
[2017-10-22 23:13:51,885] replica.Replica<Replica:ec806>:INFO: [Replica:1 runningState:{'movie': 'tar'} OperationName:put OperationId:2]
[2017-10-22 23:13:51,885] replica.Replica<Replica:ec806>:OUTPUT: backward shuttle sent to previous replica
[2017-10-22 23:13:51,885] replica.Replica<Replica:ec805>:INFO: [Replica:2 runningState:{'movie': 'tar'} OperationName:slice OperationId:2 ]
[2017-10-22 23:13:51,885] replica.Replica<Replica:ec805>:OUTPUT: result of operation is OK for Replica:2
[2017-10-22 23:13:51,886] replica.Replica<Replica:ec805>:OUTPUT: Replica:2 order statement [slot,operationName,operationId,replicaId]:[3,slice,2,2] is signed,appended to order Proof
[2017-10-22 23:13:51,886] replica.Replica<Replica:ec805>:OUTPUT: Replica:2 result statement [result_hash,operationName,operationId,replicaId]:[b'993c86df9aeaf07579b44943216571b94456b0228e65b6e09384701a7c4ab03f',slice,2,2] is signed,appended to result Proof
[2017-10-22 23:13:51,886] replica.Replica<Replica:ec807>:INFO: Replica:0 received backward shuttle:1 for client:1
[2017-10-22 23:13:51,887] replica.Replica<Replica:ec807>:OUTPUT: Replica:0 {client:{message_type>messagecount}:{1: {<MessageTypes.DIRECT: 0>: 1, <MessageTypes.RESULT_SHUTTLE: 3>: 1}, 0: {<MessageTypes.DIRECT: 0>: 1, <MessageTypes.RESULT_SHUTTLE: 3>: 0}}
[2017-10-22 23:13:51,887] replica.Replica<Replica:ec805>:OUTPUT: client result shuttle sent from tail to client:0
[2017-10-22 23:13:51,887] replica.Replica<Replica:ec805>:OUTPUT: backward shuttle generated from tail
[2017-10-22 23:13:51,887] replica.Replica<Replica:ec807>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=True change_privatekey=False for the backward shuttle:1 client:1 in Replica:0
[2017-10-22 23:13:51,888] client.Client<Client:ec803>:INFO: Client:0 received result:OK from <Replica:ec805>
[2017-10-22 23:13:51,888] client.Client<Client:ec803>:INFO: Client:0 is operation valid: True
[2017-10-22 23:13:51,888] replica.Replica<Replica:ec807>:OUTPUT: Result Proof is valid for Replica:0
[2017-10-22 23:13:51,889] replica.Replica<Replica:ec807>:OUTPUT: Backward Shuttle:1 for client:1 passed validation at Replica:0
[2017-10-22 23:13:51,889] replica.Replica<Replica:ec807>:INFO: [Replica:0 runningState:{'movie': 'tar'} OperationName:put OperationId:2]
[2017-10-22 23:13:51,889] replica.Replica<Replica:ec807>:OUTPUT: backward shuttle reached head
[2017-10-22 23:13:51,889] client.Client<Client:ec803>:INFO: Client:0 Result Proof is valid
[2017-10-22 23:13:51,889] client.Client<Client:ec803>:INFO: Client:0 received VALID result
[2017-10-22 23:13:51,890] client.Client<Client:ec803>:INFO: client 0 workload output:{'movie': 'tar'}
[2017-10-22 23:13:51,890] replica.Replica<Replica:ec806>:INFO: Replica:1 received backward shuttle:1 for client:0
[2017-10-22 23:13:51,890] replica.Replica<Replica:ec806>:OUTPUT: Replica:1 {client:{message_type>messagecount}:{1: {<MessageTypes.SHUTTLE: 2>: 1, <MessageTypes.RESULT_SHUTTLE: 3>: 1}, 0: {<MessageTypes.SHUTTLE: 2>: 1, <MessageTypes.RESULT_SHUTTLE: 3>: 1}}
[2017-10-22 23:13:51,890] replica.Replica<Replica:ec806>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=False change_privatekey=False for the backward shuttle:1 client:0 in Replica:1
[2017-10-22 23:13:51,891] bcr.Node_<Node_:a5001>:INFO: master receiveded done from all clients
[2017-10-22 23:13:51,891] replica.Replica<Replica:ec806>:OUTPUT: Result Proof is valid for Replica:1
[2017-10-22 23:13:51,891] replica.Replica<Replica:ec806>:OUTPUT: Backward Shuttle:1 for client:0 passed validation at Replica:1
[2017-10-22 23:13:51,892] replica.Replica<Replica:ec806>:INFO: [Replica:1 runningState:{'movie': 'tar'} OperationName:slice OperationId:2]
[2017-10-22 23:13:51,892] client.Client<Client:ec803>:INFO: client:0 received done from master
[2017-10-22 23:13:51,892] client.Client<Client:ec803>:INFO: client:0 sending done to olympus
[2017-10-22 23:13:51,892] client.Client<Client:ec802>:INFO: client:1 received done from master
[2017-10-22 23:13:51,892] replica.Replica<Replica:ec806>:OUTPUT: backward shuttle sent to previous replica
[2017-10-22 23:13:51,892] client.Client<Client:ec802>:INFO: client:1 sending done to olympus
[2017-10-22 23:13:51,892] client.Client<Client:ec803>:INFO: Client 0 terminating
[2017-10-22 23:13:51,893] client.Client<Client:ec802>:INFO: Client 1 terminating
[2017-10-22 23:13:51,893] replica.Replica<Replica:ec807>:INFO: Replica:0 received backward shuttle:1 for client:0
[2017-10-22 23:13:51,893] replica.Replica<Replica:ec807>:OUTPUT: Replica:0 {client:{message_type>messagecount}:{1: {<MessageTypes.DIRECT: 0>: 1, <MessageTypes.RESULT_SHUTTLE: 3>: 1}, 0: {<MessageTypes.DIRECT: 0>: 1, <MessageTypes.RESULT_SHUTTLE: 3>: 1}}
[2017-10-22 23:13:51,894] replica.Replica<Replica:ec807>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=True change_privatekey=False for the backward shuttle:1 client:0 in Replica:0
[2017-10-22 23:13:51,895] bcr.Node_<Node_:a5001>:OUTPUT: master acknowledge done to clients
[2017-10-22 23:13:51,895] bcr.Node_<Node_:a5001>:OUTPUT: master waiting  done from  olympus
[2017-10-22 23:13:51,895] olympus.Olympus<Olympus:ec804>:OUTPUT: olympus received done from all clients
[2017-10-22 23:13:51,895] replica.Replica<Replica:ec807>:OUTPUT: Result Proof is valid for Replica:0
[2017-10-22 23:13:51,896] olympus.Olympus<Olympus:ec804>:OUTPUT: olympus sending  done to all replicas
[2017-10-22 23:13:51,896] replica.Replica<Replica:ec807>:OUTPUT: Backward Shuttle:1 for client:0 passed validation at Replica:0
[2017-10-22 23:13:51,896] replica.Replica<Replica:ec807>:INFO: [Replica:0 runningState:{'movie': 'tar'} OperationName:slice OperationId:2]
[2017-10-22 23:13:51,896] replica.Replica<Replica:ec807>:OUTPUT: backward shuttle reached head
