[2017-10-22 21:03:03,184] da.api<MainProcess>:INFO: <Node_:a5001> initialized at 127.0.0.1:(UdpTransport=39780, TcpTransport=12572).
[2017-10-22 21:03:03,184] da.api<MainProcess>:INFO: Starting program <module 'bcr' from '/Users/nikithakandru/Desktop/Async/BCR/bcr/bcr.py'>...
[2017-10-22 21:03:03,184] da.api<MainProcess>:INFO: Running iteration 1 ...
[2017-10-22 21:03:03,185] da.api<MainProcess>:INFO: Waiting for remaining child processes to terminate...(Press "Ctrl-C" to force kill)
[2017-10-22 21:03:03,187] bcr.Node_<Node_:a5001>:OUTPUT: configuration parameters are read from file
[2017-10-22 21:03:03,187] bcr.Node_<Node_:a5001>:OUTPUT: replica private keys
[2017-10-22 21:03:03,187] bcr.Node_<Node_:a5001>:OUTPUT:  [<nacl.signing.SigningKey object at 0x10354a160>, <nacl.signing.SigningKey object at 0x10354a1d0>, <nacl.signing.SigningKey object at 0x10354a240>]
[2017-10-22 21:03:03,187] bcr.Node_<Node_:a5001>:OUTPUT: replica public keys
[2017-10-22 21:03:03,188] bcr.Node_<Node_:a5001>:OUTPUT:  [<nacl.signing.VerifyKey object at 0x10354a198>, <nacl.signing.VerifyKey object at 0x10354a208>, <nacl.signing.VerifyKey object at 0x10354a278>]
[2017-10-22 21:03:03,233] olympus.Olympus<Olympus:fd803>:INFO: Starting Olympus
[2017-10-22 21:03:03,237] client.Client<Client:fd802>:INFO: Client 0 asking for configuration from  Olympus
[2017-10-22 21:03:03,284] replica.Replica<Replica:fd805>:INFO: Starting Replica
[2017-10-22 21:03:03,284] replica.Replica<Replica:fd806>:INFO: Starting Replica
[2017-10-22 21:03:03,284] replica.Replica<Replica:fd804>:INFO: Starting Replica
[2017-10-22 21:03:03,286] olympus.Olympus<Olympus:fd803>:INFO: Message inithist sent to replica 0
[2017-10-22 21:03:03,286] olympus.Olympus<Olympus:fd803>:INFO: Message inithist sent to replica 1
[2017-10-22 21:03:03,286] olympus.Olympus<Olympus:fd803>:INFO: Message inithist sent to replica 2
[2017-10-22 21:03:03,287] olympus.Olympus<Olympus:fd803>:INFO: Olympus received configuration_request from client 0
[2017-10-22 21:03:03,287] replica.Replica<Replica:fd805>:INFO: replica 0 received inithist from olympus
[2017-10-22 21:03:03,288] replica.Replica<Replica:fd805>:INFO: Replica 0 is head
[2017-10-22 21:03:03,287] replica.Replica<Replica:fd804>:INFO: replica 1 received inithist from olympus
[2017-10-22 21:03:03,288] replica.Replica<Replica:fd806>:INFO: replica 2 received inithist from olympus
[2017-10-22 21:03:03,288] replica.Replica<Replica:fd806>:INFO: Replica 2 is tail
[2017-10-22 21:03:03,289] olympus.Olympus<Olympus:fd803>:INFO: Olympus sending configuration response to client 0
[2017-10-22 21:03:03,291] client.Client<Client:fd802>:INFO: Client 0 received configuration_response from olympus
[2017-10-22 21:03:03,294] client.Client<Client:fd802>:INFO: Client 0 sent (operationName,operationId,key,value):(put,1,movie,star) to head
[2017-10-22 21:03:03,295] replica.Replica<Replica:fd805>:INFO: Replica:0 received client_operation_request:0 from client:0 
[2017-10-22 21:03:03,295] replica.Replica<Replica:fd805>:OUTPUT: Replica:0 {client:{message_type>messagecount} is :{0: {<MessageTypes.DIRECT: 0>: 0}}
[2017-10-22 21:03:03,296] replica.Replica<Replica:fd805>:OUTPUT: Failure trigger is None , failure checks:  change_oper=False change_result=False drop_result=False change_privatekey=False for the client_operation_request 0 in Replica:0
[2017-10-22 21:03:03,296] replica.Replica<Replica:fd805>:INFO: [Replica:0 runningState:{'movie': 'star'} OperationName:put OperationId:1 ]
[2017-10-22 21:03:03,296] replica.Replica<Replica:fd805>:OUTPUT: result of operation is OK for Replica:0
[2017-10-22 21:03:03,296] replica.Replica<Replica:fd805>:OUTPUT: Replica:0 order statement [slot,operationName,operationId,replicaId]:[0,put,1,0] is signed,appended to order Proof
[2017-10-22 21:03:03,297] replica.Replica<Replica:fd805>:OUTPUT: Replica:0 result statement [result_hash,operationName,operationId,replicaId]:[b'993c86df9aeaf07579b44943216571b94456b0228e65b6e09384701a7c4ab03f',put,1,0] is signed,appended to result Proof
[2017-10-22 21:03:03,299] replica.Replica<Replica:fd805>:OUTPUT: Forward Shuttle sent from head for Client:0
[2017-10-22 21:03:03,302] replica.Replica<Replica:fd804>:INFO: Replica:1 received forward shuttle:0 for client:0
[2017-10-22 21:03:03,302] replica.Replica<Replica:fd804>:OUTPUT: Replica:1 {client:{message_type>messagecount} is :{0: {<MessageTypes.SHUTTLE: 2>: 0}}
[2017-10-22 21:03:03,302] replica.Replica<Replica:fd804>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=False change_privatekey=False for the forward shuttle:0 client:0 in Replica:1
[2017-10-22 21:03:03,303] replica.Replica<Replica:fd804>:OUTPUT: Forward Shuttle:0 for Client:0 passed validation at Replica:1
[2017-10-22 21:03:03,304] replica.Replica<Replica:fd804>:INFO: [Replica:1 runningState:{'movie': 'star'} OperationName:put OperationId:1 ]
[2017-10-22 21:03:03,304] replica.Replica<Replica:fd804>:OUTPUT: result of operation is OK for Replica:1
[2017-10-22 21:03:03,304] replica.Replica<Replica:fd804>:OUTPUT: Replica:1 order statement [slot,operationName,operationId,replicaId]:[0,put,1,1] is signed,appended to order Proof
[2017-10-22 21:03:03,305] replica.Replica<Replica:fd804>:OUTPUT: Replica:1 result statement [result_hash,operationName,operationId,replicaId]:[b'993c86df9aeaf07579b44943216571b94456b0228e65b6e09384701a7c4ab03f',put,1,1] is signed,appended to result Proof
[2017-10-22 21:03:03,306] replica.Replica<Replica:fd804>:OUTPUT: forward shuttle sent to next replica
[2017-10-22 21:03:03,307] replica.Replica<Replica:fd806>:INFO: Replica:2 received forward shuttle:0 for client:0
[2017-10-22 21:03:03,308] replica.Replica<Replica:fd806>:OUTPUT: Replica:2 {client:{message_type>messagecount} is :{0: {<MessageTypes.SHUTTLE: 2>: 0}}
[2017-10-22 21:03:03,308] replica.Replica<Replica:fd806>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=False change_privatekey=False for the forward shuttle:0 client:0 in Replica:2
[2017-10-22 21:03:03,309] replica.Replica<Replica:fd806>:OUTPUT: Forward Shuttle:0 for Client:0 passed validation at Replica:2
[2017-10-22 21:03:03,309] replica.Replica<Replica:fd806>:INFO: [Replica:2 runningState:{'movie': 'star'} OperationName:put OperationId:1 ]
[2017-10-22 21:03:03,309] replica.Replica<Replica:fd806>:OUTPUT: result of operation is OK for Replica:2
[2017-10-22 21:03:03,310] replica.Replica<Replica:fd806>:OUTPUT: Replica:2 order statement [slot,operationName,operationId,replicaId]:[0,put,1,2] is signed,appended to order Proof
[2017-10-22 21:03:03,310] replica.Replica<Replica:fd806>:OUTPUT: Replica:2 result statement [result_hash,operationName,operationId,replicaId]:[b'993c86df9aeaf07579b44943216571b94456b0228e65b6e09384701a7c4ab03f',put,1,2] is signed,appended to result Proof
[2017-10-22 21:03:03,312] replica.Replica<Replica:fd806>:OUTPUT: client result shuttle sent from tail to client:0
[2017-10-22 21:03:03,312] client.Client<Client:fd802>:INFO: Client:0 received result:OK from <Replica:fd806>
[2017-10-22 21:03:03,312] client.Client<Client:fd802>:INFO: Client:0 is operation valid: True
[2017-10-22 21:03:03,313] replica.Replica<Replica:fd806>:OUTPUT: backward shuttle generated from tail
[2017-10-22 21:03:03,313] replica.Replica<Replica:fd804>:INFO: Replica:1 received backward shuttle:0 for client:0
[2017-10-22 21:03:03,314] client.Client<Client:fd802>:INFO: Client:0 Result Proof is valid
[2017-10-22 21:03:03,314] replica.Replica<Replica:fd804>:OUTPUT: Replica:1 {client:{message_type>messagecount}:{0: {<MessageTypes.SHUTTLE: 2>: 0, <MessageTypes.RESULT_SHUTTLE: 3>: 0}}
[2017-10-22 21:03:03,314] client.Client<Client:fd802>:INFO: Client:0 received VALID result
[2017-10-22 21:03:03,314] replica.Replica<Replica:fd804>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=False change_privatekey=False for the backward shuttle:0 client:0 in Replica:1
[2017-10-22 21:03:03,314] client.Client<Client:fd802>:INFO: client 0 workload output:{'movie': 'star'}
[2017-10-22 21:03:03,315] replica.Replica<Replica:fd804>:OUTPUT: Result Proof is valid for Replica:1
[2017-10-22 21:03:03,315] replica.Replica<Replica:fd804>:OUTPUT: Backward Shuttle:0 for client:0 passed validation at Replica:1
[2017-10-22 21:03:03,315] bcr.Node_<Node_:a5001>:INFO: master receiveded done from all clients
[2017-10-22 21:03:03,315] replica.Replica<Replica:fd804>:INFO: [Replica:1 runningState:{'movie': 'star'} OperationName:put OperationId:1]
[2017-10-22 21:03:03,316] bcr.Node_<Node_:a5001>:OUTPUT: master acknowledge done to clients
[2017-10-22 21:03:03,316] bcr.Node_<Node_:a5001>:OUTPUT: master waiting  done from  olympus
[2017-10-22 21:03:03,316] client.Client<Client:fd802>:INFO: client:0 received done from master
[2017-10-22 21:03:03,317] client.Client<Client:fd802>:INFO: client:0 sending done to olympus
[2017-10-22 21:03:03,318] client.Client<Client:fd802>:INFO: Client 0 terminating
[2017-10-22 21:03:03,318] replica.Replica<Replica:fd804>:OUTPUT: backward shuttle sent to previous replica
[2017-10-22 21:03:03,318] olympus.Olympus<Olympus:fd803>:OUTPUT: olympus received done from all clients
[2017-10-22 21:03:03,318] olympus.Olympus<Olympus:fd803>:OUTPUT: olympus sending  done to all replicas
[2017-10-22 21:03:03,318] replica.Replica<Replica:fd805>:INFO: Replica:0 received backward shuttle:0 for client:0
[2017-10-22 21:03:03,319] replica.Replica<Replica:fd805>:OUTPUT: Replica:0 {client:{message_type>messagecount}:{0: {<MessageTypes.DIRECT: 0>: 0, <MessageTypes.RESULT_SHUTTLE: 3>: 0}}
[2017-10-22 21:03:03,319] replica.Replica<Replica:fd805>:OUTPUT: Failure trigger is None , failure checks is  change_oper=False change_result=False drop_result=False change_privatekey=False for the backward shuttle:0 client:0 in Replica:0
[2017-10-22 21:03:03,321] replica.Replica<Replica:fd805>:OUTPUT: Result Proof is valid for Replica:0
[2017-10-22 21:03:03,322] replica.Replica<Replica:fd805>:OUTPUT: Backward Shuttle:0 for client:0 passed validation at Replica:0
[2017-10-22 21:03:03,322] replica.Replica<Replica:fd805>:INFO: [Replica:0 runningState:{'movie': 'star'} OperationName:put OperationId:1]
[2017-10-22 21:03:03,322] replica.Replica<Replica:fd805>:OUTPUT: backward shuttle reached head
